{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","message","handleKeyUp","event","setState","key","this","document","addEventListener","removeEventListener","className","React","Component","ReactDOM","render","getElementById"],"mappings":"oNAMaA,EAAb,4MACEC,MAAe,CACbC,QAAS,IAFb,EAiBEC,YAAc,SAACC,GACb,EAAKC,SAAS,CAAEH,QAAQ,4BAAD,OAA8BE,EAAME,IAApC,QAlB3B,uDAKE,WACEC,KAAKF,SAAS,CAAEH,QAAS,8BAN7B,gCASE,WACEM,SAASC,iBAAiB,QAASF,KAAKJ,eAV5C,kCAaE,WACEK,SAASE,oBAAoB,QAASH,KAAKJ,eAd/C,oBAqBE,WACE,OACE,qBAAKQ,UAAU,MAAf,SACE,mBAAGA,UAAU,eAAb,SAA6BJ,KAAKN,MAAMC,gBAxBhD,GAAyBU,IAAMC,W,MCD/BC,IAASC,OACP,cAAC,EAAD,IACAP,SAASQ,eAAe,W","file":"static/js/main.f6eeeeff.chunk.js","sourcesContent":["import React from 'react';\n\ntype State = {\n  message: string,\n};\n\nexport class App extends React.Component<{}, State> {\n  state: State = {\n    message: '',\n  };\n\n  componentDidMount(): void {\n    this.setState({ message: 'Nothing was pressed yet' });\n  }\n\n  componentDidUpdate(): void {\n    document.addEventListener('keyup', this.handleKeyUp);\n  }\n\n  componentWillUnmount(): void {\n    document.removeEventListener('keyup', this.handleKeyUp);\n  }\n\n  handleKeyUp = (event: KeyboardEvent) => {\n    this.setState({ message: `The last pressed key is [${event.key}]` });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <p className=\"App__message\">{this.state.message}</p>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}